{"ast":null,"code":"// import { Route } from 'react-router-dom';\n\n// import AdminHome from '../../Admin/AdminHome/AdminHome';\n// import UserHome from '../../UserHome/UserHome';\n// import CandidateProfileForCandidate from '../../CandidateProfile/CandidateProfileForCandidate';\n// import { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n// import { useSelector } from 'react-redux';\n// import { useState } from 'react';\n\n// function ProtectedRoutesForLogin(Props) {\n\n//     // const loggedUser = useSelector((state) => state.user)\n\n//     // const userType= loggedUser\n//     // console.log(userType);\n//     const history = useHistory();\n//     const [loggedUser, setloggedUser] = useState({\n//         token: \"\",\n//         type: \"\",\n//         id: \"\",\n//         firstName: \"\",\n//         lastName: \"\",\n//         email: \"\",\n//         userType: \"\"\n//     })\n\n//     // Initialize the user data from the 'loggedUser' cookie when the component mounts\n\n//         const cookies = document.cookie.split('; ');\n//         for (const cookie of cookies) {\n//             const [name, value] = cookie.split('=');\n//             if (name === 'loggedUser') {\n//                 const user = JSON.parse(decodeURIComponent(value));\n//                 setloggedUser(user);\n//                 break;\n//             }\n//         }\n//         debugger;\n// console.log(loggedUser)\n\n//    // var UserType = sessionStorage.getItem(\"loggedUserDatausertype\");\n\n//     if (loggedUser.userType == \"ADMIN\") {\n//         return <Route exact path={Props.path} component={AdminHome}></Route>\n//     }\n\n//     else if (loggedUser.userType == \"VOTER\") {\n//         return <Route exact path={Props.path} component={UserHome}></Route>\n//     }\n\n//     else if (loggedUser.userType == \"CANDIDATE\") {\n//         return <Route exact path={Props.path} component={CandidateProfileForCandidate}></Route>\n//     }\n//     else {\n//         history.push(\"/Login\")\n//     }\n// }\n\n// export default ProtectedRoutesForLogin;","map":{"version":3,"names":[],"sources":["/home/ritesh/Desktop/projectkyc/projectkyc/src/SignUp/ProtectedRoutes/ProtectedRoutesForLogin.js"],"sourcesContent":["// import { Route } from 'react-router-dom';\n\n// import AdminHome from '../../Admin/AdminHome/AdminHome';\n// import UserHome from '../../UserHome/UserHome';\n// import CandidateProfileForCandidate from '../../CandidateProfile/CandidateProfileForCandidate';\n// import { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n// import { useSelector } from 'react-redux';\n// import { useState } from 'react';\n\n\n// function ProtectedRoutesForLogin(Props) {\n\n//     // const loggedUser = useSelector((state) => state.user)\n\n//     // const userType= loggedUser\n//     // console.log(userType);\n//     const history = useHistory();\n//     const [loggedUser, setloggedUser] = useState({\n//         token: \"\",\n//         type: \"\",\n//         id: \"\",\n//         firstName: \"\",\n//         lastName: \"\",\n//         email: \"\",\n//         userType: \"\"\n//     })\n\n//     // Initialize the user data from the 'loggedUser' cookie when the component mounts\n    \n//         const cookies = document.cookie.split('; ');\n//         for (const cookie of cookies) {\n//             const [name, value] = cookie.split('=');\n//             if (name === 'loggedUser') {\n//                 const user = JSON.parse(decodeURIComponent(value));\n//                 setloggedUser(user);\n//                 break;\n//             }\n//         }\n//         debugger;\n// console.log(loggedUser)\n\n//    // var UserType = sessionStorage.getItem(\"loggedUserDatausertype\");\n    \n//     if (loggedUser.userType == \"ADMIN\") {\n//         return <Route exact path={Props.path} component={AdminHome}></Route>\n//     }\n\n//     else if (loggedUser.userType == \"VOTER\") {\n//         return <Route exact path={Props.path} component={UserHome}></Route>\n//     }\n\n//     else if (loggedUser.userType == \"CANDIDATE\") {\n//         return <Route exact path={Props.path} component={CandidateProfileForCandidate}></Route>\n//     }\n//     else {\n//         history.push(\"/Login\")\n//     }\n// }\n\n// export default ProtectedRoutesForLogin;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}