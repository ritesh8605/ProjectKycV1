{"ast":null,"code":"var _jsxFileName = \"/home/ritesh/Desktop/projectkyc/projectkyc/src/Login/ProtectedRoutes.js\";\nimport { Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoutes(Props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"if(true)\", /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/Login\",\n      component: Props.Launch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this), \"else\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Not Authorized.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["Route","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoutes","Props","children","exact","path","component","Launch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ritesh/Desktop/projectkyc/projectkyc/src/Login/ProtectedRoutes.js"],"sourcesContent":["\n\nimport { Route} from 'react-router-dom';\n\nfunction ProtectedRoutes(Props) {\n    return<>\n            if(true){\n                <Route exact path=\"/Login\" component={Props.Launch}></Route>\n            }\n            else{\n\n            }\n            <h1>Not Authorized.....</h1>\n\n            </>\n}\n\nexport default ProtectedRoutes;"],"mappings":";AAEA,SAASA,KAAK,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,eAAeA,CAACC,KAAK,EAAE;EAC5B,oBAAMJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,GAAE,UACQ,eACJL,OAAA,CAACF,KAAK;MAACQ,KAAK;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAEJ,KAAK,CAACK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/D,MACG,eAGJb,OAAA;MAAAK,QAAA,EAAI;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAE1B,CAAC;AACf;AAACC,EAAA,GAXQX,eAAe;AAaxB,eAAeA,eAAe;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}