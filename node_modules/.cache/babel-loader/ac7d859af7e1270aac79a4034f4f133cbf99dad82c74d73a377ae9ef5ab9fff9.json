{"ast":null,"code":"import { Route } from 'react-router-dom';\nimport AdminHome from '../../Admin/AdminHome/AdminHome';\nimport UserHome from '../../UserHome/UserHome';\nimport CandidateProfileForCandidate from '../../CandidateProfile/CandidateProfileForCandidate';\nfunction ProtectedRoutesForLogin(Props) {\n  const storedData = localStorage.getItem('loggedUserData');\n  const userData = JSON.parse(storedData);\n  console.log(user);\n\n  // if (userData.userType == \"ADMIN\") {\n  //     return <Route exact path={Props.path} component={AdminHome}></Route>\n  // }\n\n  // else if (userData.userType == \"VOTER\") {\n  //     return <Route exact path={Props.path} component={UserHome}></Route>\n  // }\n\n  // else {\n  //     return <Route exact path={Props.path} component={CandidateProfileForCandidate}></Route>\n  // }\n}\n_c = ProtectedRoutesForLogin;\nexport default ProtectedRoutesForLogin;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutesForLogin\");","map":{"version":3,"names":["Route","AdminHome","UserHome","CandidateProfileForCandidate","ProtectedRoutesForLogin","Props","storedData","localStorage","getItem","userData","JSON","parse","console","log","user","_c","$RefreshReg$"],"sources":["/home/ritesh/Desktop/projectkyc/projectkyc/src/SignUp/ProtectedRoutes/ProtectedRoutesForLogin.js"],"sourcesContent":["import { Route } from 'react-router-dom';\n\nimport AdminHome from '../../Admin/AdminHome/AdminHome';\nimport UserHome from '../../UserHome/UserHome';\nimport CandidateProfileForCandidate from '../../CandidateProfile/CandidateProfileForCandidate';\n\n\nfunction ProtectedRoutesForLogin(Props) {\n\n   \n\n\n    const storedData = localStorage.getItem('loggedUserData');\n    const userData = JSON.parse(storedData);\n\n    console.log(user)\n\n\n    // if (userData.userType == \"ADMIN\") {\n    //     return <Route exact path={Props.path} component={AdminHome}></Route>\n    // }\n\n    // else if (userData.userType == \"VOTER\") {\n    //     return <Route exact path={Props.path} component={UserHome}></Route>\n    // }\n\n    // else {\n    //     return <Route exact path={Props.path} component={CandidateProfileForCandidate}></Route>\n    // }\n}\n\nexport default ProtectedRoutesForLogin;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AAExC,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,4BAA4B,MAAM,qDAAqD;AAG9F,SAASC,uBAAuBA,CAACC,KAAK,EAAE;EAKpC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EACzD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;EAEvCM,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;;EAGjB;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;AACJ;AAACC,EAAA,GAtBQX,uBAAuB;AAwBhC,eAAeA,uBAAuB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}